    Author:  GuoWenxue   Wuhan. Hubei Province. China
Connect:
     Email:  <guowenxue@gmail.com>
        QQ:  281143292
     Skype:  kkernel
 
 ChangeLog:  
   Version: 1.0.0 (Fri May 20 15:11:13 CST 2011)
        a, Add howto build cross compiler for ARM920T(S3C2410,S3C2440,AT91RM9200), 
           ARM926T(S3C2416, AT91SAM9260),ARM1176JZF-S(S3C6410) by buildroot-2011.02


I, Build cross compiler for ARM920T, such as s3c2410, s3c2440, at91rm9200
=======================

1, Download follow source code to /opt/dl folder, or you can just only download buildroot-2011.02.tar.bz2 
   and when make the cross compiler, it will auto download them by itself. I just wanna prepare them first here.

[guowenxue@localhost opt]$ pwd
/opt
[guowenxue@localhost opt]$ ls dl/
binutils-2.21.tar.bz2      ccache-3.1.4.tar.bz2  gmp-5.0.1.tar.bz2     lzo-2.03.tar.gz     uClibc-0.9.31.tar.bz2
buildroot-2011.02.tar.bz2  gcc-4.3.5.tar.bz2     linux-2.6.37.tar.bz2  mpfr-3.0.0.tar.bz2  zlib-1.2.5.tar.bz2

2, Uncompess the buildroot-2011.02 packet and move the dl folder to buildroot

[guowenxue@localhost opt]$ tar -xjf dl/buildroot-2011.02.tar.bz2 
[guowenxue@localhost opt]$ mv dl/ buildroot-2011.02/

3, Copy the buildroot-2011.02 default configulre files for ARM920T from github:
 
[guowenxue@localhost opt]$ cd buildroot-2011.02/
[guowenxue@localhost buildroot-2011.02]$ cp ~/workpath/crosstool/buildroot/buildroot-2011.02-config_arm920t .config

4, For my default configure file can works fine, maybe you needn't do make menuconfig again. But I think U can 
  check which cross compiler features I choosed.

[guowenxue@localhost buildroot-2011.02]$ export TERM=vt100
[guowenxue@localhost buildroot-2011.02]$ make menuconfig

5, The last thing you need do is just type "make" command, it will start to build the cross compiler by Computer. 
   It takes about 30 minutes to make it, which depends on your computer performance.

[guowenxue@localhost buildroot-2011.02]$ make

6, After "make" successfully, it will output the cross compiler to: /opt/buildroot-2011.02/arm920t, 
   the install path configured when "make menuconfig", or you can specify it in the configure file(.config):

BR2_DL_DIR="$(TOPDIR)/dl"           #This is the source code packet download path
BR2_HOST_DIR="$(TOPDIR)/arm920t"    #Cross compiler install path

7, Then we can use follow command to check the cross compiler:

[guowenxue@localhost buildroot-2011.02]$ /opt/buildroot-2011.02/arm920t/usr/bin/arm-linux-gcc -v
Using built-in specs.
Target: arm-unknown-linux-uclibcgnueabi
Configured with: /opt/buildroot-2011.02/output/toolchain/gcc-4.3.5/configure --prefix=/opt/buildroot-2011.02/arm920t/usr --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-unknown-linux-uclibcgnueabi --enable-languages=c,c++ --with-sysroot=/opt/buildroot-2011.02/arm920t/usr/arm-unknown-linux-uclibcgnueabi/sysroot --with-build-time-tools=/opt/buildroot-2011.02/arm920t/usr/arm-unknown-linux-uclibcgnueabi/bin --disable-__cxa_atexit --enable-target-optspace --with-gnu-ld --disable-libssp --disable-multilib --disable-tls --disable-shared --with-gmp=/opt/buildroot-2011.02/arm920t/usr --with-mpfr=/opt/buildroot-2011.02/arm920t/usr --enable-threads --disable-decimal-float --with-float=soft --with-abi=aapcs-linux --with-arch=armv4t --with-tune=arm920t --with-pkgversion='Buildroot 2011.02' --with-bugurl=http://bugs.buildroot.net/
Thread model: posix
gcc version 4.3.5 (Buildroot 2011.02) 
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm920t/usr/bin/arm-linux-gcc hello.c -o hello
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), not stripped
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm920t/usr/bin/arm-linux-gcc hello.c -o hello -static
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), statically linked, not stripped


II. Continue to build Cross compiler for ARM926T, such as AT91SAM9260, S3C2416.
=======================

   If we have build the cross compiler for the ARM920T as above illustrate, then we can continue to build 
the cross compiler for ARM926T again as follow:

1, Copy the buildroot-2011.02 default configulre files for ARM926T from github, must do it first, 
   or on the follow step "make distclean" will remove the old ARM920T cross compiler:

[guowenxue@localhost buildroot-2011.02]$ cp ~/workpath/crosstool/buildroot/buildroot-2011.02-config_arm926t .config
cp: overwrite `.config'? y

2, Backup the dl folder and do "make distclean" remove the old compiler temple files. Some thing be carefull 
   that we must backup the dl folder, or "make distclean" will remove it.

[guowenxue@localhost buildroot-2011.02]$ mv dl/ dl-bak
[guowenxue@localhost buildroot-2011.02]$ make distclean
rm -rf /opt/buildroot-2011.02/arm926t/usr/arm-unknown-linux-uclibcgnueabi/sysroot /opt/buildroot-2011.02/output/target /opt/buildroot-2011.02/output/images /opt/buildroot-2011.02/arm926t \
                /opt/buildroot-2011.02/output/stamps /opt/buildroot-2011.02/output/build /opt/buildroot-2011.02/output/toolchain /opt/buildroot-2011.02/output/staging \
                /opt/buildroot-2011.02/output/external-toolchain
rm -rf /opt/buildroot-2011.02/dl
rm -rf output
rm -rf /opt/buildroot-2011.02/.config /opt/buildroot-2011.02/.config.old /opt/buildroot-2011.02/.auto.deps

3, Copy the buildroot default configure file again, for "make distclean" have remove it just now, 
   and restore the dl folder, then we can start to compile the new compiler again.

[guowenxue@localhost buildroot-2011.02]$ cp ~/workpath/crosstool/buildroot/buildroot-2011.02-config_arm926t .config
[guowenxue@localhost buildroot-2011.02]$ mv dl-bak/ dl
[guowenxue@localhost buildroot-2011.02]$ make

4, After make over, we can use follow command to check it:

[guowenxue@localhost buildroot-2011.02]$ /opt/buildroot-2011.02/arm926t/usr/bin/arm-linux-gcc -v
Using built-in specs.
Target: arm-unknown-linux-uclibcgnueabi
Configured with: /opt/buildroot-2011.02/output/toolchain/gcc-4.3.5/configure --prefix=/opt/buildroot-2011.02/arm926t/usr --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-unknown-linux-uclibcgnueabi --enable-languages=c,c++ --with-sysroot=/opt/buildroot-2011.02/arm926t/usr/arm-unknown-linux-uclibcgnueabi/sysroot --with-build-time-tools=/opt/buildroot-2011.02/arm926t/usr/arm-unknown-linux-uclibcgnueabi/bin --disable-__cxa_atexit --enable-target-optspace --with-gnu-ld --disable-libssp --disable-multilib --disable-tls --disable-shared --with-gmp=/opt/buildroot-2011.02/arm926t/usr --with-mpfr=/opt/buildroot-2011.02/arm926t/usr --enable-threads --disable-decimal-float --with-float=soft --with-abi=aapcs-linux --with-arch=armv5te --with-tune=arm926ej-s --with-pkgversion='Buildroot 2011.02' --with-bugurl=http://bugs.buildroot.net/
Thread model: posix
gcc version 4.3.5 (Buildroot 2011.02) 
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm926t/usr/bin/arm-linux-gcc hello.c -o hello -static  
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), statically linked, not stripped
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm926t/usr/bin/arm-linux-gcc hello.c -o hello 
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), not stripped



III. Continue to build Cross compiler for ARM1176JZF-S, such as S3C6410.
=======================

1, Copy the buildroot-2011.02 default configulre files for ARM1176JZF-S from github, must do it first, 
   or on the follow step "make distclean" will remove the old ARM926T cross compiler:

[guowenxue@localhost buildroot-2011.02]$ cp ~/workpath/crosstool/buildroot/buildroot-2011.02-config_arm1176jzf-s .config
cp: overwrite `.config'? y

2, Backup the dl folder and do "make distclean" remove the old compiler temple files. Some thing be carefull 
   that we must backup the dl folder, or "make distclean" will remove it.

[guowenxue@localhost buildroot-2011.02]$ mv dl/ dl-bak
[guowenxue@localhost buildroot-2011.02]$ make distclean
rm -rf /opt/buildroot-2011.02/arm1176jzf-s/usr/arm-unknown-linux-uclibcgnueabi/sysroot /opt/buildroot-2011.02/output/target /opt/buildroot-2011.02/output/images /opt/buildroot-2011.02/arm1176jzf-s \
                /opt/buildroot-2011.02/output/stamps /opt/buildroot-2011.02/output/build /opt/buildroot-2011.02/output/toolchain /opt/buildroot-2011.02/output/staging \
                /opt/buildroot-2011.02/output/external-toolchain
rm -rf /opt/buildroot-2011.02/dl
rm -rf output
rm -rf /opt/buildroot-2011.02/.config /opt/buildroot-2011.02/.config.old /opt/buildroot-2011.02/.auto.deps

3, Copy the buildroot default configure file again, for "make distclean" have remove it just now, 
   and restore the dl folder, then we can start to compile the new compiler again.

[guowenxue@localhost buildroot-2011.02]$ cp ~/workpath/crosstool/buildroot/buildroot-2011.02-config_arm1176jzf-s .config
[guowenxue@localhost buildroot-2011.02]$ mv dl-bak/ dl
[guowenxue@localhost buildroot-2011.02]$ make

4, After make over, we can use follow command to check it:

[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm1176jzf-s/usr/bin/arm-linux-gcc -v   
Using built-in specs.
Target: arm-unknown-linux-uclibcgnueabi
Configured with: /opt/buildroot-2011.02/output/toolchain/gcc-4.3.5/configure --prefix=/opt/buildroot-2011.02/arm1176jzf-s/usr --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-unknown-linux-uclibcgnueabi --enable-languages=c,c++ --with-sysroot=/opt/buildroot-2011.02/arm1176jzf-s/usr/arm-unknown-linux-uclibcgnueabi/sysroot --with-build-time-tools=/opt/buildroot-2011.02/arm1176jzf-s/usr/arm-unknown-linux-uclibcgnueabi/bin --disable-__cxa_atexit --enable-target-optspace --with-gnu-ld --disable-libssp --disable-multilib --disable-tls --disable-shared --with-gmp=/opt/buildroot-2011.02/arm1176jzf-s/usr --with-mpfr=/opt/buildroot-2011.02/arm1176jzf-s/usr --enable-threads --disable-decimal-float --with-float=soft --with-abi=aapcs-linux --with-arch=armv6zk --with-tune=arm1176jzf-s --with-pkgversion='Buildroot 2011.02' --with-bugurl=http://bugs.buildroot.net/
Thread model: posix
gcc version 4.3.5 (Buildroot 2011.02) 
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm1176jzf-s/usr/bin/arm-linux-gcc hello.c -o hello
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), not stripped
[guowenxue@localhost ~]$ /opt/buildroot-2011.02/arm1176jzf-s/usr/bin/arm-linux-gcc hello.c -o hello -static
[guowenxue@localhost ~]$ file hello
hello: ELF 32-bit LSB executable, ARM, version 1 (SYSV), statically linked, not stripped

